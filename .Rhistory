install.packages("mvbutils")
install.packages("debugme")
install.packages("ggplot2")
install.packages("rjags")
install.packages("rmarkdown")
install.packages("tinytex")
library(rjags)
?jags.samples.
??jags.samples.
a <- 2
a
b <- 1/a
b
b
func <- function(x,y,k=0.5)
x*cos(y-k)
func (3,2)
func(3,2,0) #setting k as 0
a <- 1 + 2 + 3 ##split line but it looks complete to R
+ 4 + 5
a <- 1+2+3
a
a <- 1+2+3+$
a <-1+2+3+4
+3
a <- 1+2+3
+4+5
a
a <- 1+2+3+
4+5
a
a <-2; b <- 1/a; d <- log(b)
b
d
q()
x <- c(10,2,7,89,43,1)
ii <- which(x%/%10 > 0)
cd
xs
xs <- rep(0,length(ii)+length(x))
poem <- paste("Inside me is a skeleton, of this I have no doubt,",
"now it's got my flesh on, but its waiting to get out.")
pow <- strsplit(poem," ")
n.words <- length(pow)
freq <- tabulate(nchar(pow))#count frequency of words
ie <- grep("e", pow, fixed=TRUE) #FIND LETTERS WITH e
n.words <- length(pow)
freq <- tabulate(nchar(pow))#count frequency of words
ie <- grep("e", pow, fixed=TRUE) #FIND INDICES of words WITH e
n.e <- length(ie)
poem <- paste("Inside me is a skeleton, of this I have no doubt,",
"now it’s got my flesh on, but it’s waiting to get out.")
pow <- strsplit(poem, " ") ##splitting characters by spaces
no.words <- length(pow) ##get the number of words
print(no.words)
no.words
poem <- paste("Inside me is a skeleton, of this I have no doubt,",
"now it’s got my flesh on, but it’s waiting to get out.")
pow <- strsplit(poem, " ") ##splitting characters by spaces
no.words <- lengths(pow) ##get the number of words
print(no.words)
nchar = nchar(pow)
print(nchar)
char_count = nchar(pow)
print(char_count)
n = nchar(pow)
print(n)
char_count = tabulate(n) ##tabulate command
frequency() = tabulate(n) ##tabulate command
freq() = tabulate(n) ##tabulate command
poem <- paste("Inside me is a skeleton, of this I have no doubt,",
"now it’s got my flesh on, but it’s waiting to get out.")
pow <- strsplit(poem, " ") ##splitting characters by spaces
no.words <- lengths(pow) ##get the number of words
##nchar gets the length of a character in a string
freq() = tabulate(nchar(pow)) ##tabulate command
poem <- paste("Inside me is a skeleton, of this I have no doubt,",
"now it’s got my flesh on, but it’s waiting to get out.")
pow <- strsplit(poem, " ") ##splitting characters by spaces
no.words <- lengths(pow) ##get the number of words
##nchar gets the length of a character in a string
freq() = tabulate(nchar(pow)) ##tabulate command
freq() <- tabulate(nchar(pow)) ##tabulate command
freq <- tabulate(nchar(pow)) ##tabulate command
ie <- grep("e", pow, fixed = TRUE)
iea <- ia[ia %in% ie] #finds indices containing an a and e.
##nchar gets the length of a character in a string
freq <- tabulate(nchar(pow)) ##tabulate command
ie <- grep("e", pow, fixed = TRUE)
n.e <- length(ie) #finds the count of 'e' words
ia <- grep("a", pow, fixed = TRUE) #finds the indices of the words with 'a'
iea <- ia[ia %in% ie] #finds indices containing an a and e.
pow[iea] <-paste(pow[iea],"*",sep="")
paste(pow,collapse="")##i
poem <- paste("Inside me is a skeleton, of this I have no doubt,",
"now it’s got my flesh on, but it’s waiting to get out.")
pow <- strsplit(poem, " ") ##splitting characters by spaces
no.words <- lengths(pow) ##get the number of words
##nchar gets the length of a character in a string
freq <- tabulate(nchar(pow)) ##tabulate command
ie <- grep("e", pow, fixed = TRUE)
n.e <- length(ie) #finds the count of 'e' words
ia <- grep("a", pow, fixed = TRUE) #finds the indices of the words with 'a'
iea <- ia[ia %in% ie] #finds indices containing an a and e.
pow[iea] <-paste(pow[iea],"*",sep="") ## The paste function is used for this,
##with sep="" indicating that no space is wanted between a word and ‘*’
paste(pow,collapse="")##is finally used to put the words in pow back
##into a single string. It is the setting of collapse to
##something non-NULL (here a space) that signals to paste that this should happen.
##with sep="" indicating that no space is wanted between a word and ‘*’
paste(pow,collapse="")##is finally used to put the words in pow back
a <- scan("4300-0.txt",what="character",skip=73,nlines=32858-73)
setwd("~/Desktop/Ext_Stat")
a <- scan("4300-0.txt",what="character",skip=73,nlines=32858-73)
a <- gsub("_(","",a,fixed=TRUE) ## remove "_("
words <- strsplit(a, "")
split_punct <- function(words, punctuation) {
# Find indices of words containing the specified punctuation
punct_indices <- grep(paste0("\\", punctuation), words)
# Remove the punctuation mark from those words
words_without_punct <- gsub(paste0("\\", punctuation), "", words[punct_indices])
# Add the punctuation mark as a new entry after the corresponding word
updated_words <- rep(words, each = 1)
updated_words[punct_indices * 2] <- punctuation
# Combine the updated words and words without punctuation
result <- c(updated_words, words_without_punct)
return(result)
}
split_punct <- function(words, punctuation) {
# Find indices of words containing the specified punctuation
punct_indices <- grep(paste0(punctuation, "$"), words)
# Remove the punctuation mark from those words
words_without_punct <- gsub(paste0(punctuation, "$"), "", words[punct_indices])
# Add the punctuation mark as a new entry after the corresponding word
updated_words <- words
updated_words[punct_indices] <- words_without_punct
updated_words <- rep(updated_words, each = 1)
return(updated_words)
}
punctuation_mark <- ("!", "?" , "." , "," , ":" , ";")
punctuation_mark <- ("!" , "?" , "." , "," , ":" , ";")
punctuation_mark <- c("!" , "?" , "." , "," , ":" , ";")
split_punct <- function(words, punctuation) {
# Find indices of words containing the specified punctuation
punct_indices <- grep(paste0(punctuation, "$"), words)
# Remove the punctuation mark from those words
words_without_punct <- gsub(paste0(punctuation, "$"), "", words[punct_indices])
# Add the punctuation mark as a new entry after the corresponding word
updated_words <- words
updated_words[punct_indices] <- words_without_punct
updated_words <- rep(updated_words, each = 1)
return(updated_words)
}
punctuation_mark <- c("!" , "?" , "." , "," , ":" , ";")
result <- split_punct(words, punctuation_mark)
print(result)
split_punct <- function(words, punctuation) {
# Find indices of words containing the specified punctuation
punct_indices <- grep(paste0(punctuation, "$"), words)
# Add the punctuation mark as a new entry after the corresponding word
updated_words <- words
updated_words[punct_indices] <- paste(updated_words[punct_indices], punctuation)
return(updated_words)
}
result <- split_punct(words, punctuation_mark)
print(result)
words <- strsplit(a, "")
words
words <- strsplit(a)
a
words <- a
#
split_punct <- function(words, punctuation) {
# Find indices of words containing the specified punctuation
punct_indices <- grep(paste0(punctuation, "$"), words)
# Add the punctuation mark as a new entry after the corresponding word
updated_words <- words
updated_words[punct_indices] <- paste(updated_words[punct_indices], punctuation)
return(updated_words)
}
words <- a
#
split_punct <- function(words, punctuation) {
# Find indices of words containing the specified punctuation
punct_indices <- grep(paste0(punctuation, "$"), words)
# Add the punctuation mark as a new entry after the corresponding word
updated_words <- words
updated_words[punct_indices] <- paste(updated_words[punct_indices], punctuation)
return(updated_words)
}
split_punct <- function(words, punctuation) {
# Find indices of words containing the specified punctuation
punct_indices <- grep(paste0(punctuation, "$"), words)
# Add the punctuation mark as a new entry after the corresponding word
updated_words <- words
updated_words[punct_indices] <- paste(updated_words[punct_indices], punctuation)
return(updated_words)
}
punctuation_mark = ","
result <- split_punct(words, punctuation_mark)
print(result)
rm(ii, punctuation_mark, result, x , xs)
rm(split_punct)
rm(words)
setwd("~/Desktop/Ext_Stat")
a <- scan("4300-0.txt",what="character",skip=73,nlines=32858-73)
a <- gsub("_(","",a,fixed=TRUE) ## remove "_("
##q6
##a)
words <-strsplit(a, " ") #splitting words
words <- c(tolower(words)) #lowercased words
unique_words <- c(unique(words)) ##finding unique words in the text and storing as vector
indexing <-match(c(a), c(unique_words)) #finding vector of indices that indicate which element of the text mat
cat(indexing)
uword_count<- tabulate(indexing)
uword_count<- tabulate(indexing)
#set names and display their counts
named_uword_count <- setNames(c(a) , unique_words)
print(uword_count)
uword_count<- tabulate(indexing)
#set names and display their counts
named_uword_count <- setNames(a , unique_words)
print(uword_count)
uword_count<- tabulate(indexing)
#set names and display their counts
named_uword_count <- setNames(a , unique_words)
print(uword_count)
uword_count<- tabulate(indexing)
#set names and display their counts
named_uword_count <- setNames(a , unique_words)
print(uword_count)
uword_count<- tabulate(indexing)
#set names and display their counts
named_uword_count <- setNames(uword_count , unique_words)
uword_count<- tabulate(indexing)
#set names and display their counts
named_uword_count <- setNames(uword_count , unique_words)
uword_count<- tabulate(match(c(a), c(unique_words)))
#set names and display their counts
named_uword_count <- setNames(uword_count , unique_words)
uword_count<- tabulate(indexing)
indexing
uword_count<- tabulate(indexing)
indexing <-match(c(a), c(unique_words))
uword_count<- tabulate(indexing)
uword_count
uword_count<- tabulate(indexing)
uword <- unique_words
word_counts_named <- setNames(uword_count, uword)
uword_count<- tabulate(indexing)
uword <- unique_words
word_counts_named <- setNames(c(uword_count), c(uword))
uword_count
uword_count_tb <- data.frame(Word = names(unique_words), Count = as.vector(uword_count))
uword_count<- tabulate(indexing)
uword_count_table <-table(unique_words)
uword_count_tb <- data.frame(Word = names(uword_count_table), Count = as.vector(uword_count_table))
uword_count_tb
a <- gsub("_(","",a,fixed=TRUE) ## remove "_("
words <-strsplit(a, " ") #splitting words
words <- c(tolower(words)) #lowercased words
unique_words <- c(unique(words)) ##finding unique words in the text and storing as vector
#b)
indexing <-match(c(a), c(unique_words)) #finding vector of indices that indicate which element of the text matches to elements from the unique vectors
#c)
table(indexing) #counts the number of times unique words
or table(unique_words)
uword_count<- tabulate(indexing)
uword_count_table <-table(unique_words)
uword_count_tb <- data.frame(Word = names(uword_count_table), Count = as.vector(uword_count_table))
uword_count_tb
uword_count_table <-table(indexing)
uword_count_tb <- data.frame(Word = names(uword_count_table), Count = as.vector(uword_count_table))
uword_count_tb
uword_count<- tabulate(indexing)
uword_count_table <-table(unique_words)
uword_count_tb <- data.frame(Word = names(unique_words), Count = as.vector(uword_count))
uword_count<- tabulate(indexing)
uword_count_table <-table(unique_words)
uword_count_tb <- data.frame(Word = names(uword_count_table), Count = as.vector(uword_count_table))
uword_count_tb
uword_count<- tabulate(indexing)
uword_count
poem <- paste("Inside me is a skeleton, of this I have no doubt,",
"now it’s got my flesh on, but it’s waiting to get out.")
pow <- strsplit(poem," ")[[1]] ## vector of poem words
n.words <- length(pow) ## number of words
freq <- tabulate(nchar(pow))
freq
n.words
text_data <- c(
"the", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog",
"the", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog",
"the", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog",
# ... more text ...
)
text_data <- c(
"the", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog",
"the", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog",
"the", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog"
)
word_freq
text_data <- c(
"the", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog",
"the", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog",
"the", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog"
)
# Calculate word frequencies
word_freq <- table(text_data)
word_freq
setwd("~/Desktop/Ext_Stat")
a <- scan("4300-0.txt",what="character",skip=73,nlines=32858-73)
a <- gsub("_(","",a,fixed=TRUE) ## remove "_("
words <-strsplit(a, " ") #splitting words
words <- c(tolower(words)) #lowercased words
unique_words <- c(unique(words)) ##finding unique words in the text and storing as vector
wordfreQ <-table(c(words))
wordfreQ
threshold <- sort(wordfreQ, decreasing = TRUE)[1000]
threshold <- sort(wordfreQ, decreasing = TRUE)[1000]
cat("Threshold for the top 1000 most common words:", threshold, "\n")
words <-strsplit(a, " ") #splitting words
wordfreQ <-table(c(words))
rm(list=ls())
a <- scan("4300-0.txt",what="character",skip=73,nlines=32858-73)
a <- gsub("_(","",a,fixed=TRUE) ## remove "_("
words <-strsplit(a, " ") #splitting words
wordfreQ <-table(c(words))
unique_words <- c(unique(words)) ##finding unique words in the text and storing as vector
indexing <-match(c(a), c(unique_words)) #finding vector of indices that indicate which element of the text matches to elements from the unique vectors
#c)
table(indexing)
uword_count<- tabulate(indexing)
uword_count_table <-table(unique_words)
uword_count_tb <- data.frame(Word = names(uword_count_table), Count = as.vector(uword_count_table))
wordfreQ <-table(c(words))
words <-strsplit(a, " ") #splitting words
wordfreQ <-table(c(words))
rm(list=ls())
setwd("~/Desktop/Ext_Stat")
a <- scan("4300-0.txt",what="character",skip=73,nlines=32858-73)
a <- gsub("_(","",a,fixed=TRUE) ## remove "_("
##q6
##a)
words <-strsplit(a, " ") #splitting words
words <- c(tolower(words)) #lowercased words
unique_words <- c(unique(words)) ##finding unique words in the text and storing as vector
#b)
indexing <-match(c(a), c(unique_words)) #finding vector of indices that indicate which element of the text matches to elements from the unique vectors
#c)
table(indexing) #counts the number of times unique words come u
#
uword_count<- tabulate(indexing)
#d)
wordfreQ <-table(c(words))
threshold <- sort(wordfreQ, decreasing = TRUE)[1000]
cat("Threshold for the top 1000 most common words:", threshold, "\n")
m <- 1000 #number of words, given m = 1000
b <- names(wordfreQ[word_freQ <= threshold][1:m])
wordfreQ <-table(c(words))
freq_words <- sort(wordfreQ, decreasing = TRUE) #sorting numbers in decreasing to obtain most common to least common number of words
threshold <- freq_words[1000] #obtaining number of times a word  must come in 1000 most common words
cat("Threshold required to retain 1000 words:", threshold, "\n") #printing the threshold value
#e)
m <- 1000 #number of words, given m = 1000
b <- names(wordfreQ[word_freQ <= threshold][1:m])
m <- 1000 #number of words, given m = 1000
b <- names(wordfreQ[wordfreQ <= threshold][1:m])
cat("1000 most commonly occurring words: \n", b)
b
modified_b <- ifelse(b %in% words, b, tolower(b))
modified_b[match(tolower(b), tolower(words))] <- b[b %in% words]
# Print vector b with modified capitalization
cat("Vector b containing the top", m, "most common words (with capitalization matching the text data):\n")
print(modified_b)
modified_b <- ifelse(b %in% a, b, tolower(b))
modified_b[match(tolower(b), tolower(a))] <- b[b %in% a]
# Print vector b with modified capitalization
cat("Vector b containing the top", m, "most common words (with capitalization matching the text data):\n")
print(modified_b)
rm(list=ls())
